Alasan menulis Semantic HTML
1. Accessibility (Mudah dibaca user)
2. Maintainability (Mudah dibaca developer)
3. SEO (Mudah dibaca mesin pencari)

- HTML harus ditulis dengan merepresentasikan data yang akan ditampilkan, bukan berdasarkan bagaimana dia ditampilkan(style).
- Memudahkan aksesibilitas, terutama saat menggunakan screen reader
- Lebih mudah mencari dan mengelola code yang memiliki makna
- Berpengaruh pada SEO, karena semantic HTML dianggap sebagai kata kunci yang penting

Kategori Element HTML5
- Metadata = untuk mendeskripsikan info dari website
- Flow = element yang biasa digunakan dalan website
- Sectioning = element2 untuk menjelaskan bagian2 tertentu dari website
- Heading = untuk menuliskan judul
- Phrasing = untuk menjelaskan info yang ada dalam web kita
- Embedded = element2 multimedia yang bisa dimasukan ke halaman website
- Interactive = element2 yang bisa diberikan interaksi konten

Contoh Semantic Element HTML5
- main
- article
- header
- footer
- aside
- nav

dokumentasi nya: 
https://html.spec.whatwg.org/multipage/dom.html#content-categories
https://developer.mozilla.org/en-US/docs/Web/HTML/Element
https://www.w3.org/TR/html5/dom.html#content-categories

WAI - ARIA / Web Accessibility Initiative - Accessibility Rich Internet Applications
- WAI - ARIA adalah standar khusus untuk mengubah tampilan elemen HTML5
- WAI - ARIA memungkinkan elemen HTML5 untuk mengubah tampilan elemen lain 

Media Elements
1. Image Elements
- <img>
- <figure></figure>
- <picture></picture>

2.
- <video></video>:
1.1 atribut:
- controls="controls" 
- autoplay="autoplay" 
- loop="loop" 
- muted="muted", 
- poster="" 
- src
- preload
- muted
- width
- height

1.2 track:
- src: sumber
- kind: jenis track nya (title / sub title, caption, description, capture)
- title
- srclang: kode bahasanya
- embed: cara ambil url video dari luar 


- <audio></audio>:
2.1 audio
+ atribut:
- src: alamat
- controls: kendali
- preload: di load dlu baru play
- autoplay: di play langsung
- loop: audio diputar kembali jika sudah sampai akhir
- muted: membuat audio tidak ada suara nya
+ tag:
- source: ganti video atau audionya (srcset)
- track: subtitle
- <audio></audio>: 
2.1.1 digunakan untuk menjalankan file audio
2.1.2 file yang didukung: .mp3, .wav, .ogg
2.1.3 bisa menggunakan tag <source> untuk memilih audio


3. Canvas:
3.1 karakteristik:
- Digunakan utk menggambar gradis menggunakan javascript
- Biasa digunakan utk membuat: animasi, game, visualisasi data, manipulasi foto dan pemrosesan video secara real-time.
- Dapat berisi object 2d atau 3d
- Menggunakan canvas API atau webGL API

3.2 atribut:
- width
- height

*Canvas API
- Grid

3.3 Beberapa Library 3rd Party Canvas:
- d3.js 
- three.js 
- p5.js 
- matter.js
- phaser
- babylon.js

3.4 Canvas API Shapes:
        - Rectangle
        - Arc / Circle
        - Path
        - Bezier & Quadratic Curve

3.5 Canvas API animasi:
- requestAnimationFrame()
- clearRect()


4. SVG: Scalable Vector Graphic
4.1 Karakteristik:
- adalah format gambar vector dengan tingkat detail lebih baik daripada bitmap image
- hanya memerlukan satu file svg untuk semua resolusi dari layar kecil sampai besar
- mampu memperbesar/memperdolong elemennya tanpa perlu melakukan rescaling
- kompresi ukuran file terkecil dalam halaman HTML
- sangatlah efisien di browser modern
- Digunakan utk membuat gambar yang tidak akan hilang kualitas nya meskipun diperbesar.
- Bisa dengan cara membuat sendiri garis dan bentuknya.
- Atau dengan menggunakan grafis svg terpisah (.svg).
- Setiap elemen didalam SVG dapat dimanipulasi menggunakan bantuan css.

4.2 Atribut:

4.3 Keuntungan SVG:
- Scalability
- Interactivity
- Easily editable
- Compact file size
- SEO friendly

4.4 SVG Basic Shapes:
- Rectangle
- Circle
- Ellipse
- Line
- Polygon
- Path

4.5 Path Commands:
- MoveTo: M, m
- LineTo: L, l, H, h, V, v 
- Cubic Bezier Curve: C, c, S, s 
- Quadratic Bezier Curve: Q, q, T, t 
- Elliptical Arc Curve: A, a 

4.6 SVG Resource:
- blobmaker.app 
- shapedivider.app 
- svgrepo.com 
- simpleicons.org 

5. Form Validation:
- Client Side 
- Server Side 

5.1 Client Side Validation:
- html5 built-in validation :
1.1 Input types:
- email
- tel 
- url 
- number
- range 
- datetime picker 
- color picker
1.2 Attribut
- autocomplete (input / form)
- required (input / select / textarea )
- pattern (input type = text/email/url/tel/number)
- minlength & maxlength (textarea)
- step (range input)
- autofocus
- min & max 

1.3 CSS validation pseudo-class:
- :required
- :invalid
- :valid

1.4 javascript custom validation:
- oninvalid
-setCustomvalidity()

6. Web Storage:
6.1 Local Storage
6.2 Session Storage
6.3 Digunakan kapan:
- preferensi user
- Setting & Configuration
- Score & Leaderboards pd game 
- Posisi Video / audio terakhir
6.4 Jangan digunakan untuk:
- Data Sensitif
- Otentikasi
6.5 localStorage & SessionStorage Properties:
- setItem(key,value): Menyimpan pasangan key/value.
- getItem(key): Mengambil nilai dari suatu item berdasarkan nama yang diberikan sebagai
parameter ke function ini.
- removeItem(key): Hapus data dengan mengetahui nama keynya.
- clear(): menghapus semua data storage.
- key(index): Mengambil nilai key berdasarkan index.
- length: mengetahui jumlah nilai didalam storage.

7. Accessibility: Sebuah cara utk membuat website kita bisa digunakan oleh sebanyak mungkin User.

7.1 Web Accessibility Tips:
- Buat struktur DOM yang masuk akal 
dan mudah dibaca.
- Gunakan heading tag hanya satu level pada tiap halaman web Anda.
- Pastikan konten dan navigasi tetap ada apabila elemen visual tidak ditampilkan ataupun dinonaktifkan.
- Gunakan semantic Element 
- Interactive control:
1.Gunakan elemen yang sesuai, jangan gunakan div atau span
1.1 Screen reader tidak menganggap div / span sebagai control
1.2 Div/Span tidak focusable, sehingga tidak bisa diaktifkan menggunakan keyboard 
- Beri label pada semua kontrol dan gambar
- Terapkan manajemen fokus yang intuitif:
1. Pengguna keyboard melakukan navigasi dengan memindahkan fokus melalui DOM 
2. Sebisa mungkin gunakan elemen Interactive
3. Jika tidak, gunakan tabindex agar elemen custom menjadi focusable 
4. elemen kontrol yang custom harus merespon tombol seperti enter & spasi
- Website bisa diakses penuh dengan hanya menggunakan keyboard
- Tambahkan 

7.2 struktur DOM + Accessibility
- DOM Tree -> dilihat oleh user normal
- Accessibility Tree -> dilihat oleh user luar biasa

7.3 Accessibility Testing:
- WAVE (Web Accessibility Evaluation Tool) : https://wave.webaim.org/extension/
- Chrome Lighthouse
- WCAG